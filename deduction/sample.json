[
    {"version": "0.2", "hypothesis": "the grease-gun is a kind of an eyespot.", "hypothesis_formula": "{I}{d}", "context": "sent1: if there is something such that the fact that it is not a Mead and it is not interdepartmental is wrong then the paleface is a centerpiece. sent2: the garmentmaker seams Sterope if it is a kind of a prototherian. sent3: if there is something such that that it is non-imperialistic and is not interdepartmental does not hold then the paleface is not tomentose. sent4: if the crosscut is imperialistic then the fact that it is not a Mead and it is not interdepartmental does not hold. sent5: the fact that the crosscut is a kind of a Mead but it is not interdepartmental is wrong. sent6: the fact that the grease-gun is an eyespot is not false if the paleface is a kind of a centerpiece. sent7: if something is a Mead that the paleface is a kind of a centerpiece is not wrong. sent8: the crosscut is not a prototherian if something does seam Sterope and/or it is not a kind of a prototherian. sent9: there is something such that that it is a kind of non-imperialistic thing that is not interdepartmental is incorrect. sent10: if there is something such that it is tomentose and/or it does seam Sterope the crosscut is imperialistic.", "context_formula": "sent1: (x): \u00ac(\u00ac{G}x & \u00ac{F}x) -> {H}{c} sent2: {A}{a} -> {C}{a} sent3: (x): \u00ac(\u00ac{E}x & \u00ac{F}x) -> \u00ac{D}{c} sent4: {E}{b} -> \u00ac(\u00ac{G}{b} & \u00ac{F}{b}) sent5: \u00ac({G}{b} & \u00ac{F}{b}) sent6: {H}{c} -> {I}{d} sent7: (x): {G}x -> {H}{c} sent8: (x): ({C}x v \u00ac{A}x) -> \u00ac{A}{b} sent9: (Ex): \u00ac(\u00ac{E}x & \u00ac{F}x) sent10: (x): ({D}x v {C}x) -> {E}{b}", "proofs": [], "proofs_formula": [], "negative_hypothesis": "the grease-gun is not an eyespot.", "negative_hypothesis_formula": "\u00ac{I}{d}", "negative_proofs": ["sent9 & sent3 -> int1: the paleface is not tomentose.;"], "negative_original_tree_depth": 7, "original_tree_depth": 9, "depth": null, "num_formula_distractors": 5, "num_translation_distractors": 0, "num_all_distractors": 5, "proof_label": "UNKNOWN", "negative_proof_label": "UNKNOWN", "world_assump_label": "UNKNOWN", "negative_world_assump_label": "UNKNOWN"},
    {"version": "0.2", "hypothesis": "there exists something such that it does roast and it does spring-clean graffito.", "hypothesis_formula": "(Ex): ({C}x & {D}x)", "context": "sent1: there exists something such that it does not spring-clean macron and is vernal. sent2: if something that is not a kind of a subcontractor is a Ferdinand then the partner is not electrochemical. sent3: the accordion is not a kind of a roast but it does spring-clean graffito if it is vernal. sent4: if the searcher does spring-clean graffito the princedom spring-clean graffito. sent5: the accordion is vernal. sent6: there exists something such that it is both not a subcontractor and a Ferdinand. sent7: the partner is an escalation if something that does not spring-clean macron is vernal. sent8: the searcher spring-cleans graffito and it is a pharmacologist. sent9: if the partner is an escalation but it is not electrochemical the princedom does roast.", "context_formula": "sent1: (Ex): (\u00ac{F}x & {E}x) sent2: (x): (\u00ac{AA}x & {AB}x) -> \u00ac{A}{a} sent3: {E}{d} -> (\u00ac{C}{d} & {D}{d}) sent4: {D}{c} -> {D}{b} sent5: {E}{d} sent6: (Ex): (\u00ac{AA}x & {AB}x) sent7: (x): (\u00ac{F}x & {E}x) -> {B}{a} sent8: ({D}{c} & {G}{c}) sent9: ({B}{a} & \u00ac{A}{a}) -> {C}{b}", "proofs": ["sent6 & sent2 -> int1: that the partner is not electrochemical is true.; sent1 & sent7 -> int2: that the partner is a kind of an escalation is right.; int1 & int2 -> int3: the partner is an escalation but it is not electrochemical.; int3 & sent9 -> int4: the princedom is a kind of a roast.; sent8 -> int5: the searcher does spring-clean graffito.; sent4 & int5 -> int6: that the princedom does spring-clean graffito is right.; int4 & int6 -> int7: the princedom is a kind of a roast that spring-cleans graffito.; int7 -> hypothesis;"], "proofs_formula": ["sent6 & sent2 -> int1: \u00ac{A}{a}; sent1 & sent7 -> int2: {B}{a}; int1 & int2 -> int3: ({B}{a} & \u00ac{A}{a}); int3 & sent9 -> int4: {C}{b}; sent8 -> int5: {D}{c}; sent4 & int5 -> int6: {D}{b}; int4 & int6 -> int7: ({C}{b} & {D}{b}); int7 -> hypothesis;"], "negative_hypothesis": "the partner is a pharmacologist.", "negative_hypothesis_formula": "{G}{a}", "negative_proofs": ["sent3 & sent5 -> int8: the accordion is not a roast but it does spring-clean graffito.; int8 -> int9: the accordion is not a roast.; int9 -> int10: something is not a roast.;"], "negative_original_tree_depth": 7, "original_tree_depth": 5, "depth": 5, "num_formula_distractors": 2, "num_translation_distractors": 0, "num_all_distractors": 2, "proof_label": "PROVED", "negative_proof_label": "UNKNOWN", "world_assump_label": "PROVED", "negative_world_assump_label": "UNKNOWN"},
    {"version": "0.2", "hypothesis": "the noncom is not synchronic but it is Mongol.", "hypothesis_formula": "(\u00ac{C}{c} & {D}{c})", "context": "sent1: the bigamist is a compline if the dun does not spring-clean heated and does not deprecate snarer. sent2: if that something is a compline and it is a Mongol is not right it is not a kind of a Mongol. sent3: that the noncom is a kind of a Mongol is not false. sent4: the noncom is not synchronic if it is not a Cygnus. sent5: the bigamist is not a compline. sent6: if the fact that the dun does not spring-clean heated and it does not deprecate snarer is wrong then the noncom is not a kind of a Cygnus.", "context_formula": "sent1: (\u00ac{AA}{a} & \u00ac{AB}{a}) -> {B}{b} sent2: (x): \u00ac({B}x & {D}x) -> \u00ac{D}x sent3: {D}{c} sent4: \u00ac{A}{c} -> \u00ac{C}{c} sent5: \u00ac{B}{b} sent6: \u00ac(\u00ac{AA}{a} & \u00ac{AB}{a}) -> \u00ac{A}{c}", "proofs": ["void -> assump1: Let's assume that that the dun does not spring-clean heated and does not deprecate snarer hold.; sent1 & assump1 -> int1: the fact that the bigamist is a compline is not incorrect.; int1 & sent5 -> int2: this is contradiction.; [assump1] & int2 -> int3: that the dun does not spring-clean heated and does not deprecate snarer is not true.; int3 & sent6 -> int4: the noncom is not a Cygnus.; int4 & sent4 -> int5: the noncom is not synchronic.; int5 & sent3 -> hypothesis;"], "proofs_formula": ["void -> assump1: (\u00ac{AA}{a} & \u00ac{AB}{a}); sent1 & assump1 -> int1: {B}{b}; int1 & sent5 -> int2: #F#; [assump1] & int2 -> int3: \u00ac(\u00ac{AA}{a} & \u00ac{AB}{a}); int3 & sent6 -> int4: \u00ac{A}{c}; int4 & sent4 -> int5: \u00ac{C}{c}; int5 & sent3 -> hypothesis;"], "negative_hypothesis": "the Napoleon is not Mongol.", "negative_hypothesis_formula": "\u00ac{D}{ic}", "negative_proofs": ["sent2 -> int6: the Napoleon is not a kind of a Mongol if that it is a compline and it is a Mongol is wrong.;"], "negative_original_tree_depth": 4, "original_tree_depth": 6, "depth": 6, "num_formula_distractors": 1, "num_translation_distractors": 0, "num_all_distractors": 1, "proof_label": "PROVED", "negative_proof_label": "UNKNOWN", "world_assump_label": "PROVED", "negative_world_assump_label": "UNKNOWN"},
    {"version": "0.2", "hypothesis": "that the non-aquiferousness and the non-coreferentialness occurs does not hold.", "hypothesis_formula": "\u00ac(\u00ac{H} & \u00ac{I})", "context": "sent1: the nosohusialness does not occur if the stabling does not occur. sent2: the spring-cleaning chronology does not occur if the abstinence occurs and the itineration occurs. sent3: if the itineration does not occur the Panhellenicness occurs but the mininess does not occur. sent4: not the safe but the spring-cleaning chronology occurs. sent5: if the nosohusialness does not occur then that the aquiferousness does not occur and the coreferentialness does not occur does not hold. sent6: the abstinence occurs.", "context_formula": "sent1: \u00ac{F} -> \u00ac{G} sent2: ({A} & {B}) -> \u00ac{C} sent3: \u00ac{B} -> ({D} & \u00ac{E}) sent4: (\u00ac{J} & {C}) sent5: \u00ac{G} -> \u00ac(\u00ac{H} & \u00ac{I}) sent6: {A}", "proofs": ["void -> assump1: Let's assume that the itineration occurs.; sent6 & assump1 -> int1: the abstinence occurs and the itineration happens.; int1 & sent2 -> int2: the spring-cleaning chronology does not occur.; sent4 -> int3: the spring-cleaning chronology occurs.; int2 & int3 -> int4: this is contradiction.; [assump1] & int4 -> int5: the fact that the itineration does not occur is not incorrect.; int5 & sent3 -> int6: both the Panhellenicness and the non-mininess occurs.;"], "proofs_formula": ["void -> assump1: {B}; sent6 & assump1 -> int1: ({A} & {B}); int1 & sent2 -> int2: \u00ac{C}; sent4 -> int3: {C}; int2 & int3 -> int4: #F#; [assump1] & int4 -> int5: \u00ac{B}; int5 & sent3 -> int6: ({D} & \u00ac{E});"], "negative_hypothesis": null, "negative_hypothesis_formula": null, "negative_proofs": [], "negative_original_tree_depth": null, "original_tree_depth": 8, "depth": null, "num_formula_distractors": 0, "num_translation_distractors": 0, "num_all_distractors": 0, "proof_label": "UNKNOWN", "negative_proof_label": null, "world_assump_label": "UNKNOWN", "negative_world_assump_label": null},
    {"version": "0.2", "hypothesis": "the Nigerian occurs.", "hypothesis_formula": "{C}", "context": "sent1: that the disjunction occurs and the mnemonics occurs is triggered by that the gassing does not occur. sent2: the predictableness occurs. sent3: if the gas occurs then the Nigerian happens. sent4: the mnemonicsness happens and the gas happens. sent5: the insentientness and the toot happens. sent6: if the archiepiscopalness happens then the monovalentness occurs. sent7: the mnemonics occurs.", "context_formula": "sent1: \u00ac{B} -> ({CP} & {A}) sent2: {FC} sent3: {B} -> {C} sent4: ({A} & {B}) sent5: ({EP} & {CS}) sent6: {N} -> {GU} sent7: {A}", "proofs": ["sent4 -> int1: the gassing happens.; sent3 & int1 -> hypothesis;"], "proofs_formula": ["sent4 -> int1: {B}; sent3 & int1 -> hypothesis;"], "negative_hypothesis": "the disjunction occurs.", "negative_hypothesis_formula": "{CP}", "negative_proofs": [], "negative_original_tree_depth": 6, "original_tree_depth": 2, "depth": 2, "num_formula_distractors": 5, "num_translation_distractors": 0, "num_all_distractors": 5, "proof_label": "PROVED", "negative_proof_label": "UNKNOWN", "world_assump_label": "PROVED", "negative_world_assump_label": "UNKNOWN"},
    {"version": "0.2", "hypothesis": "the compost is not sportive.", "hypothesis_formula": "\u00ac{E}{c}", "context": "sent1: that the cinchona is bacteriostatic is true if the antiseptic is not a Charlestown. sent2: the fact that the fact that something is a kind of a afflatus and it is sportive is correct does not hold if the fact that it does not seam gravitation is true. sent3: the fact that the antiseptic does not seam gravitation does not hold. sent4: if the antiseptic is a afflatus then it is not a kind of a Charlestown. sent5: if something is a afflatus and/or it seams gravitation it is not a Charlestown. sent6: if the cinchona is bacteriostatic the compost is not non-sportive. sent7: the antiseptic is bacteriostatic and/or it is a Charlestown. sent8: something is not sportive if the fact that it is a afflatus and is sportive does not hold. sent9: The fact that the gravitation does not seam antiseptic does not hold.", "context_formula": "sent1: \u00ac{C}{a} -> {D}{b} sent2: (x): \u00ac{B}x -> \u00ac({A}x & {E}x) sent3: {B}{a} sent4: {A}{a} -> \u00ac{C}{a} sent5: (x): ({A}x v {B}x) -> \u00ac{C}x sent6: {D}{b} -> {E}{c} sent7: ({D}{a} v {C}{a}) sent8: (x): \u00ac({A}x & {E}x) -> \u00ac{E}x sent9: {AA}{aa}", "proofs": ["sent3 -> int1: the antiseptic is a afflatus or it does seam gravitation or both.; sent5 -> int2: that the antiseptic is not a Charlestown is not wrong if it is a afflatus and/or it does seam gravitation.; int1 & int2 -> int3: the antiseptic is not a kind of a Charlestown.; int3 & sent1 -> int4: the cinchona is bacteriostatic.; int4 & sent6 -> hypothesis;"], "proofs_formula": ["sent3 -> int1: ({A}{a} v {B}{a}); sent5 -> int2: ({A}{a} v {B}{a}) -> \u00ac{C}{a}; int1 & int2 -> int3: \u00ac{C}{a}; int3 & sent1 -> int4: {D}{b}; int4 & sent6 -> hypothesis;"], "negative_hypothesis": "the fact that the compost is not sportive is true.", "negative_hypothesis_formula": "\u00ac{E}{c}", "negative_proofs": ["sent8 -> int5: if the fact that the compost is a afflatus and it is sportive is not true then it is not sportive.; sent2 -> int6: that the compost is a afflatus and is sportive is not correct if the fact that it does not seam gravitation is correct.;"], "negative_original_tree_depth": 5, "original_tree_depth": 4, "depth": 4, "num_formula_distractors": 5, "num_translation_distractors": 0, "num_all_distractors": 5, "proof_label": "DISPROVED", "negative_proof_label": "UNKNOWN", "world_assump_label": "DISPROVED", "negative_world_assump_label": "UNKNOWN"},
    {"version": "0.2", "hypothesis": "the seaming last does not occur.", "hypothesis_formula": "\u00ac{C}", "context": "sent1: that the career does not occur is prevented by that the readmission and the non-hypophysealness happens. sent2: the readmission does not occur and the hypophysealness does not occur. sent3: the Vietnamese and the impenetrableness occurs. sent4: that the career does not occur is prevented by that the readmission does not occur and the hypophysealness does not occur.", "context_formula": "sent1: ({F} & \u00ac{E}) -> {D} sent2: (\u00ac{F} & \u00ac{E}) sent3: ({A} & {B}) sent4: (\u00ac{F} & \u00ac{E}) -> {D}", "proofs": ["sent3 -> int1: the Vietnamese happens.; void -> assump1: Let's assume that the seaming last occurs.; int1 & assump1 -> int2: both the seaming last and the Vietnamese occurs.; sent4 & sent2 -> int3: the career occurs.;"], "proofs_formula": ["sent3 -> int1: {A}; void -> assump1: {C}; int1 & assump1 -> int2: ({C} & {A}); sent4 & sent2 -> int3: {D};"], "negative_hypothesis": null, "negative_hypothesis_formula": null, "negative_proofs": [], "negative_original_tree_depth": null, "original_tree_depth": 5, "depth": null, "num_formula_distractors": 1, "num_translation_distractors": 0, "num_all_distractors": 1, "proof_label": "UNKNOWN", "negative_proof_label": null, "world_assump_label": "UNKNOWN", "negative_world_assump_label": null},
    {"version": "0.2", "hypothesis": "if the hooping recitative does not occur the reply does not occur.", "hypothesis_formula": "\u00ac{B} -> \u00ac{F}", "context": "sent1: that the non-benignness and the owing happens causes the hooping ammonification. sent2: the Slovakianness and the reply occurs if the accord does not occur. sent3: the hooping recitative happens if the benignness happens. sent4: if the reply occurs then the fact that the hooping encapsulation does not occur and the hooping ammonification does not occur is not true. sent5: that the hooping ammonification happens or the hooping encapsulation does not occur or both causes that the reply does not occur.", "context_formula": "sent1: (\u00ac{A} & {C}) -> {D} sent2: \u00ac{H} -> ({G} & {F}) sent3: {A} -> {B} sent4: {F} -> \u00ac(\u00ac{E} & \u00ac{D}) sent5: ({D} v \u00ac{E}) -> \u00ac{F}", "proofs": ["void -> assump1: Let's assume that the benignness occurs.; sent3 & assump1 -> int1: the hooping recitative occurs.; void -> assump2: Let's assume that the hooping recitative does not occur.; int1 & assump2 -> int2: this is contradiction.; [assump1] & int2 -> int3: the benignness does not occur.;"], "proofs_formula": ["void -> assump1: {A}; sent3 & assump1 -> int1: {B}; void -> assump2: \u00ac{B}; int1 & assump2 -> int2: #F#; [assump1] & int2 -> int3: \u00ac{A};"], "negative_hypothesis": "the carpellateness happens.", "negative_hypothesis_formula": "{DB}", "negative_proofs": [], "negative_original_tree_depth": 7, "original_tree_depth": 8, "depth": null, "num_formula_distractors": 2, "num_translation_distractors": 0, "num_all_distractors": 2, "proof_label": "UNKNOWN", "negative_proof_label": "UNKNOWN", "world_assump_label": "UNKNOWN", "negative_world_assump_label": "UNKNOWN"},
    {"version": "0.2", "hypothesis": "the kazoo is inauspicious.", "hypothesis_formula": "\u00ac{C}{a}", "context": "sent1: something is not a rectangularity and it is not a kind of a cetacean. sent2: the fact that the kazoo is a cutting is not false if it is not a Jinja and it spring-cleans bottle. sent3: if there exists something such that the fact that it is not a rectangularity and it is not a cetacean is false then the kazoo is a cutting. sent4: there is something such that that it is a rectangularity and not cetacean does not hold. sent5: if there are non-cutting things then the cords does not seam veloute and is auspicious. sent6: if the kazoo is a propanal and does seam couplet it does not seam veloute. sent7: if something does not seam veloute but it cuts it is not inauspicious. sent8: the kazoo is a propanal and it seams couplet. sent9: there is something such that that it is not a rectangularity and it is not a cetacean does not hold.", "context_formula": "sent1: (Ex): (\u00ac{D}x & \u00ac{E}x) sent2: (\u00ac{AI}{a} & {HN}{a}) -> {A}{a} sent3: (x): \u00ac(\u00ac{D}x & \u00ac{E}x) -> {A}{a} sent4: (Ex): \u00ac({D}x & \u00ac{E}x) sent5: (x): \u00ac{A}x -> (\u00ac{B}{b} & {C}{b}) sent6: ({AA}{a} & {AB}{a}) -> \u00ac{B}{a} sent7: (x): (\u00ac{B}x & {A}x) -> {C}x sent8: ({AA}{a} & {AB}{a}) sent9: (Ex): \u00ac(\u00ac{D}x & \u00ac{E}x)", "proofs": ["sent6 & sent8 -> int1: the kazoo does not seam veloute.; sent9 & sent3 -> int2: the kazoo is a kind of a cutting.; int1 & int2 -> int3: the kazoo does not seam veloute but it is a cutting.; sent7 -> int4: that the kazoo is not auspicious is wrong if it does not seam veloute and it cuts.; int3 & int4 -> hypothesis;"], "proofs_formula": ["sent6 & sent8 -> int1: \u00ac{B}{a}; sent9 & sent3 -> int2: {A}{a}; int1 & int2 -> int3: (\u00ac{B}{a} & {A}{a}); sent7 -> int4: (\u00ac{B}{a} & {A}{a}) -> {C}{a}; int3 & int4 -> hypothesis;"], "negative_hypothesis": "that the kazoo is not auspicious is not false.", "negative_hypothesis_formula": "\u00ac{C}{a}", "negative_proofs": [], "negative_original_tree_depth": 8, "original_tree_depth": 3, "depth": 3, "num_formula_distractors": 4, "num_translation_distractors": 0, "num_all_distractors": 4, "proof_label": "DISPROVED", "negative_proof_label": "UNKNOWN", "world_assump_label": "DISPROVED", "negative_world_assump_label": "UNKNOWN"},
    {"version": "0.2", "hypothesis": "the fact that the party is not a kind of a promethium hold.", "hypothesis_formula": "\u00ac{C}{b}", "context": "sent1: if something is a kind of a legging or it hoops premeditation or both then the party is a promethium. sent2: the artiste is a kind of a promethium. sent3: the fact that the party is a kind of a promethium is true if there is something such that it hoops premeditation. sent4: the avenger is a promethium. sent5: the fact that the party is impolite is true. sent6: the armor is a promethium if there is something such that it does hoop premeditation and/or it is a kind of a legging.", "context_formula": "sent1: (x): ({A}x v {B}x) -> {C}{b} sent2: {C}{go} sent3: (x): {B}x -> {C}{b} sent4: {C}{id} sent5: {BD}{b} sent6: (x): ({B}x v {A}x) -> {C}{a}", "proofs": [], "proofs_formula": [], "negative_hypothesis": null, "negative_hypothesis_formula": null, "negative_proofs": [], "negative_original_tree_depth": null, "original_tree_depth": 3, "depth": null, "num_formula_distractors": 5, "num_translation_distractors": 0, "num_all_distractors": 5, "proof_label": "UNKNOWN", "negative_proof_label": null, "world_assump_label": "UNKNOWN", "negative_world_assump_label": null},
    {"version": "0.2", "hypothesis": "the custard-likeness does not occur.", "hypothesis_formula": "\u00ac{G}", "context": "sent1: the conflicting does not occur. sent2: that both the impoundment and the trussing Leigh happens yields that the colorlessness does not occur. sent3: the sinkableness does not occur if the fenestration happens and the occupying Parji does not occur. sent4: if the sinkableness does not occur that the fact that not the ruin but the colorlessness occurs is right is not right. sent5: either the ruining or the sinkableness or both occurs. sent6: if the bull happens that the cohabitation does not occur is not incorrect. sent7: that the occupying rutile happens is prevented by the occupying Parji and/or the fenestration. sent8: the impoundment happens and the trussing Leigh occurs. sent9: the fact that the occupying Parji occurs is right if the ruining does not occur and/or the sinkableness happens. sent10: if that the occupying rutile does not occur is not wrong the custard-likeness does not occur.", "context_formula": "sent1: \u00ac{DJ} sent2: ({H} & {I}) -> \u00ac{B} sent3: ({E} & \u00ac{D}) -> \u00ac{C} sent4: \u00ac{C} -> \u00ac(\u00ac{A} & {B}) sent5: ({A} v {C}) sent6: {AB} -> \u00ac{GB} sent7: ({D} v {E}) -> \u00ac{F} sent8: ({H} & {I}) sent9: (\u00ac{A} v {C}) -> {D} sent10: \u00ac{F} -> \u00ac{G}", "proofs": ["void -> assump1: Let's assume that the ruining occurs.; sent2 & sent8 -> int1: the colorlessness does not occur.;"], "proofs_formula": ["void -> assump1: {A}; sent2 & sent8 -> int1: \u00ac{B};"], "negative_hypothesis": "the custard-likeness occurs.", "negative_hypothesis_formula": "{G}", "negative_proofs": [], "negative_original_tree_depth": 6, "original_tree_depth": 8, "depth": null, "num_formula_distractors": 5, "num_translation_distractors": 0, "num_all_distractors": 5, "proof_label": "UNKNOWN", "negative_proof_label": "UNKNOWN", "world_assump_label": "UNKNOWN", "negative_world_assump_label": "UNKNOWN"},
    {"version": "0.2", "hypothesis": "there is something such that it does not occupy thortveitite and is a kind of a cling.", "hypothesis_formula": "(Ex): (\u00ac{D}x & {E}x)", "context": "sent1: the brawler is a ratatouille. sent2: something is not a hypodermic if the fact that it is a ratatouille and is a dreamland is not false. sent3: the diestock does not occupy thortveitite but it does cling if the brawler is not a hypodermic. sent4: the brawler is a dreamland. sent5: the ricer is a cling.", "context_formula": "sent1: {A}{a} sent2: (x): ({A}x & {B}x) -> \u00ac{C}x sent3: \u00ac{C}{a} -> (\u00ac{D}{b} & {E}{b}) sent4: {B}{a} sent5: {E}{cc}", "proofs": ["sent1 & sent4 -> int1: the brawler is a kind of a ratatouille and is a dreamland.; sent2 -> int2: the brawler is not hypodermic if it is a ratatouille and it is a dreamland.; int1 & int2 -> int3: the brawler is not a hypodermic.; int3 & sent3 -> int4: the diestock does not occupy thortveitite but it is a kind of a cling.; int4 -> hypothesis;"], "proofs_formula": ["sent1 & sent4 -> int1: ({A}{a} & {B}{a}); sent2 -> int2: ({A}{a} & {B}{a}) -> \u00ac{C}{a}; int1 & int2 -> int3: \u00ac{C}{a}; int3 & sent3 -> int4: (\u00ac{D}{b} & {E}{b}); int4 -> hypothesis;"], "negative_hypothesis": null, "negative_hypothesis_formula": null, "negative_proofs": [], "negative_original_tree_depth": null, "original_tree_depth": 4, "depth": 4, "num_formula_distractors": 1, "num_translation_distractors": 0, "num_all_distractors": 1, "proof_label": "PROVED", "negative_proof_label": null, "world_assump_label": "PROVED", "negative_world_assump_label": null},
    {"version": "0.2", "hypothesis": "that the platyrrhine is not septic hold.", "hypothesis_formula": "\u00ac{A}{a}", "context": "sent1: if something is septic and it exchanges sparkler it is not an androgyny. sent2: the tolu does not exchange Cupid if there is something such that that it is both not an eared and a winsomeness does not hold. sent3: the micronutrient is both not extrasensory and a Monothelitism if the platyrrhine is not septic. sent4: if something is surgical then it is septic. sent5: if the tussah does not exchange Cupid then it intervenes and it exchanges sparkler. sent6: the tolu exchanges Cupid if the nativist does intervene. sent7: the fact that the pantheon is both not an eared and a winsomeness does not hold. sent8: there is something such that the fact that it is a kind of an eared that is a winsomeness is incorrect. sent9: if the freeholder does not exchange sparkler and is surgical then the fact that the nativist intervenes hold. sent10: that the micronutrient is an androgyny but it does not exchange sparkler does not hold if the freeholder is not surgical. sent11: if a non-extrasensory thing is a Monothelitism then that the freeholder is not a kind of an androgyny is not wrong.", "context_formula": "sent1: (x): ({A}x & {C}x) -> \u00ac{B}x sent2: (x): \u00ac(\u00ac{H}x & {G}x) -> \u00ac{F}{e} sent3: \u00ac{A}{a} -> (\u00ac{AA}{b} & {AB}{b}) sent4: (x): {D}x -> {A}x sent5: \u00ac{F}{cq} -> ({E}{cq} & {C}{cq}) sent6: {E}{d} -> {F}{e} sent7: \u00ac(\u00ac{H}{f} & {G}{f}) sent8: (Ex): \u00ac({H}x & {G}x) sent9: (\u00ac{C}{c} & {D}{c}) -> {E}{d} sent10: \u00ac{D}{c} -> \u00ac({B}{b} & \u00ac{C}{b}) sent11: (x): (\u00ac{AA}x & {AB}x) -> \u00ac{B}{c}", "proofs": ["void -> assump1: Let's assume that the platyrrhine is not septic.; sent3 & assump1 -> int1: the micronutrient is a kind of non-extrasensory a Monothelitism.; int1 -> int2: something is not extrasensory but it is a Monothelitism.; int2 & sent11 -> int3: the freeholder is not an androgyny.; sent7 -> int4: there is something such that the fact that it is not an eared and it is a winsomeness is not true.; int4 & sent2 -> int5: the tolu does not exchange Cupid.;"], "proofs_formula": ["void -> assump1: \u00ac{A}{a}; sent3 & assump1 -> int1: (\u00ac{AA}{b} & {AB}{b}); int1 -> int2: (Ex): (\u00ac{AA}x & {AB}x); int2 & sent11 -> int3: \u00ac{B}{c}; sent7 -> int4: (Ex): \u00ac(\u00ac{H}x & {G}x); int4 & sent2 -> int5: \u00ac{F}{e};"], "negative_hypothesis": "the platyrrhine is not septic.", "negative_hypothesis_formula": "\u00ac{A}{a}", "negative_proofs": [], "negative_original_tree_depth": 6, "original_tree_depth": 8, "depth": null, "num_formula_distractors": 5, "num_translation_distractors": 0, "num_all_distractors": 5, "proof_label": "UNKNOWN", "negative_proof_label": "UNKNOWN", "world_assump_label": "UNKNOWN", "negative_world_assump_label": "UNKNOWN"},
    {"version": "0.2", "hypothesis": "the fact that the whiff does not occur and the congregationalness does not occur is wrong.", "hypothesis_formula": "\u00ac(\u00ac{E} & \u00ac{D})", "context": "sent1: the amplifying does not occur if the isthmianness occurs. sent2: the congregationalness is prevented by that the unquietness and the Mesoamericanness occurs. sent3: the whiff does not occur and the amplifying does not occur. sent4: the zapping happens and the unquietness happens. sent5: that the whiff does not occur and the congregationalness does not occur is not right if that the Mesoamerican does not occur is not wrong. sent6: the fact that that the occupying Pellaea and/or the non-Sarawakianness happens is right yields that the exchanging undress happens. sent7: the fact that the occupying Pellaea does not occur hold. sent8: that the bayoneting trophy does not occur is right. sent9: the fact that not the exchanging camlet but the occupying rightist occurs does not hold. sent10: that both the non-isthmianness and the exchanging undress happens does not hold. sent11: the Mesoamericanness occurs if the fact that the occupying Pellaea or the non-Sarawakianness or both happens does not hold.", "context_formula": "sent1: {H} -> \u00ac{G} sent2: ({C} & {A}) -> \u00ac{D} sent3: (\u00ac{E} & \u00ac{G}) sent4: ({F} & {C}) sent5: \u00ac{A} -> \u00ac(\u00ac{E} & \u00ac{D}) sent6: ({AA} v \u00ac{AB}) -> {B} sent7: \u00ac{AA} sent8: \u00ac{CK} sent9: \u00ac(\u00ac{M} & {DD}) sent10: \u00ac(\u00ac{H} & {B}) sent11: \u00ac({AA} v \u00ac{AB}) -> {A}", "proofs": ["void -> assump1: Let's assume that the occupying Pellaea and/or the non-Sarawakianness occurs.; sent6 & assump1 -> int1: the exchanging undress occurs.; sent4 -> int2: the unquietness occurs.; sent3 -> int3: the fact that the whiff does not occur hold.;"], "proofs_formula": ["void -> assump1: ({AA} v \u00ac{AB}); sent6 & assump1 -> int1: {B}; sent4 -> int2: {C}; sent3 -> int3: \u00ac{E};"], "negative_hypothesis": "the fact that the whiffing does not occur and the congregationalness does not occur is false.", "negative_hypothesis_formula": "\u00ac(\u00ac{E} & \u00ac{D})", "negative_proofs": [], "negative_original_tree_depth": 7, "original_tree_depth": 7, "depth": null, "num_formula_distractors": 5, "num_translation_distractors": 0, "num_all_distractors": 5, "proof_label": "UNKNOWN", "negative_proof_label": "UNKNOWN", "world_assump_label": "UNKNOWN", "negative_world_assump_label": "UNKNOWN"},
    {"version": "0.2", "hypothesis": "the purser is not adjudicative.", "hypothesis_formula": "\u00ac{E}{b}", "context": "sent1: the fact that the viper does not squall and is a Molossidae is false. sent2: if the breadfruit is pemphigous and does calcine it is not a Micromyx. sent3: the breadfruit is a Micromyx. sent4: the breadfruit is pemphigous if the fact that it is both not a Molossidae and not a sloucher is not right. sent5: the fact that the breadfruit is not a Molossidae and it is not a sloucher is not correct. sent6: if the purser does not calcine and is not a pretension it is not adjudicative. sent7: the purser does not calcine and is not a kind of a pretension if the breadfruit does not calcine.", "context_formula": "sent1: \u00ac(\u00ac{FE}{dq} & {AA}{dq}) sent2: ({B}{a} & {A}{a}) -> \u00ac{C}{a} sent3: {C}{a} sent4: \u00ac(\u00ac{AA}{a} & \u00ac{AB}{a}) -> {B}{a} sent5: \u00ac(\u00ac{AA}{a} & \u00ac{AB}{a}) sent6: (\u00ac{A}{b} & \u00ac{D}{b}) -> \u00ac{E}{b} sent7: \u00ac{A}{a} -> (\u00ac{A}{b} & \u00ac{D}{b})", "proofs": ["sent4 & sent5 -> int1: the breadfruit is pemphigous.; void -> assump1: Let's assume that the breadfruit calcines.; int1 & assump1 -> int2: the breadfruit is pemphigous and does calcine.; int2 & sent2 -> int3: the breadfruit is not a Micromyx.; int3 & sent3 -> int4: this is contradiction.; [assump1] & int4 -> int5: the fact that the breadfruit does not calcine is not incorrect.; int5 & sent7 -> int6: the purser does not calcine and it is not a pretension.; int6 & sent6 -> hypothesis;"], "proofs_formula": ["sent4 & sent5 -> int1: {B}{a}; void -> assump1: {A}{a}; int1 & assump1 -> int2: ({B}{a} & {A}{a}); int2 & sent2 -> int3: \u00ac{C}{a}; int3 & sent3 -> int4: #F#; [assump1] & int4 -> int5: \u00ac{A}{a}; int5 & sent7 -> int6: (\u00ac{A}{b} & \u00ac{D}{b}); int6 & sent6 -> hypothesis;"], "negative_hypothesis": null, "negative_hypothesis_formula": null, "negative_proofs": [], "negative_original_tree_depth": null, "original_tree_depth": 7, "depth": 7, "num_formula_distractors": 1, "num_translation_distractors": 0, "num_all_distractors": 1, "proof_label": "PROVED", "negative_proof_label": null, "world_assump_label": "PROVED", "negative_world_assump_label": null},
    {"version": "0.2", "hypothesis": "the hairsplitter occupies Goldmark and it is a kind of a Trachelospermum.", "hypothesis_formula": "({D}{c} & {E}{c})", "context": "sent1: if the hydrolith shaves then the hairsplitter is a Trachelospermum. sent2: that the CPU is neritic hold if the pooler is not a kind of a mineral and is not tubal. sent3: the hairsplitter does occupy Goldmark if it does not exchange ESR. sent4: the fact that the pooler does occupy Darwinian is not wrong. sent5: if the CPU is a kind of a mill-hand that is neritic then the pooler is not a Trachelospermum. sent6: the pooler is not tubal. sent7: the fact that the hairsplitter is a mill-hand is true. sent8: the CPU is a kind of a mill-hand. sent9: the pooler is a kind of non-mineral thing that is not tubal. sent10: if the hydrolith is syllabic it does shave. sent11: the hydrolith is syllabic. sent12: if the pooler is not a kind of a mineral and is tubal then the CPU is neritic.", "context_formula": "sent1: {F}{d} -> {E}{c} sent2: (\u00ac{AA}{a} & \u00ac{AB}{a}) -> {B}{b} sent3: \u00ac{C}{c} -> {D}{c} sent4: {AC}{a} sent5: ({A}{b} & {B}{b}) -> \u00ac{E}{a} sent6: \u00ac{AB}{a} sent7: {A}{c} sent8: {A}{b} sent9: (\u00ac{AA}{a} & \u00ac{AB}{a}) sent10: {G}{d} -> {F}{d} sent11: {G}{d} sent12: (\u00ac{AA}{a} & {AB}{a}) -> {B}{b}", "proofs": ["sent2 & sent9 -> int1: the CPU is neritic.; int1 & sent8 -> int2: the CPU is neritic and a mill-hand.; sent10 & sent11 -> int3: the hydrolith shaves.; sent1 & int3 -> int4: the hairsplitter is a Trachelospermum.;"], "proofs_formula": ["sent2 & sent9 -> int1: {B}{b}; int1 & sent8 -> int2: ({B}{b} & {A}{b}); sent10 & sent11 -> int3: {F}{d}; sent1 & int3 -> int4: {E}{c};"], "negative_hypothesis": "the fact that the hairsplitter does occupy Goldmark and it is a kind of a Trachelospermum does not hold.", "negative_hypothesis_formula": "\u00ac({D}{c} & {E}{c})", "negative_proofs": [], "negative_original_tree_depth": 5, "original_tree_depth": 5, "depth": null, "num_formula_distractors": 5, "num_translation_distractors": 0, "num_all_distractors": 5, "proof_label": "UNKNOWN", "negative_proof_label": "UNKNOWN", "world_assump_label": "UNKNOWN", "negative_world_assump_label": "UNKNOWN"},
    {"version": "0.2", "hypothesis": "the fact that there is something such that if it is a marzipan the fact that it is both a gonococcus and not a artiste is false is not correct.", "hypothesis_formula": "\u00ac((Ex): {A}x -> \u00ac({AA}x & \u00ac{AB}x))", "context": "sent1: that something is a infix but it does not mummify is incorrect if it is a metropolitan. sent2: the fact that something is a gonococcus but it is not a artiste does not hold if it is a marzipan. sent3: if something is a marzipan it is both a gonococcus and not a artiste. sent4: that something is a kind of a gonococcus and is a artiste does not hold if it is a kind of a marzipan.", "context_formula": "sent1: (x): {HA}x -> \u00ac({IA}x & \u00ac{BU}x) sent2: (x): {A}x -> \u00ac({AA}x & \u00ac{AB}x) sent3: (x): {A}x -> ({AA}x & \u00ac{AB}x) sent4: (x): {A}x -> \u00ac({AA}x & {AB}x)", "proofs": ["sent2 -> int1: if the remover is a marzipan then the fact that it is a gonococcus and it is not a kind of a artiste is false.; int1 -> hypothesis;"], "proofs_formula": ["sent2 -> int1: {A}{aa} -> \u00ac({AA}{aa} & \u00ac{AB}{aa}); int1 -> hypothesis;"], "negative_hypothesis": "there exists something such that if it is metropolitan the fact that it is a kind of a infix and it does not mummify is not correct.", "negative_hypothesis_formula": "(Ex): {HA}x -> \u00ac({IA}x & \u00ac{BU}x)", "negative_proofs": ["sent1 -> int2: if the torturer is a metropolitan then the fact that it is a infix that does not mummify does not hold.; int2 -> hypothesis;"], "negative_original_tree_depth": 2, "original_tree_depth": 2, "depth": 2, "num_formula_distractors": 3, "num_translation_distractors": 0, "num_all_distractors": 3, "proof_label": "DISPROVED", "negative_proof_label": "PROVED", "world_assump_label": "DISPROVED", "negative_world_assump_label": "PROVED"},
    {"version": "0.2", "hypothesis": "the butterfish does not occupy eared.", "hypothesis_formula": "\u00ac{G}{f}", "context": "sent1: the mycophagy does exchange neencephalon. sent2: that the redberry does bayonet stroke hold if the palisade occupies ISKCON. sent3: the samarium is syncategorematic if the mycophagy does exchange neencephalon. sent4: The neencephalon does exchange mycophagy. sent5: if the samarium is syncategorematic then that the palisade occupies ISKCON is right. sent6: if the redberry does not exchange self-improvement but it is syphilitic then the WAN does not occupy eared. sent7: the palisade does not bayonet stroke. sent8: the palisade is not syncategorematic. sent9: the samarium does occupy ISKCON if the fact that there is something such that the fact that it does not bayonet stroke is correct is not incorrect. sent10: the butterfish is non-intracellular and does not occupy eared if the WAN does not occupy eared. sent11: something does not exchange self-improvement but it is a syphilitic if it bayonets stroke.", "context_formula": "sent1: {A}{a} sent2: {C}{c} -> {D}{d} sent3: {A}{a} -> {B}{b} sent4: {AA}{aa} sent5: {B}{b} -> {C}{c} sent6: (\u00ac{F}{d} & {E}{d}) -> \u00ac{G}{e} sent7: \u00ac{D}{c} sent8: \u00ac{B}{c} sent9: (x): \u00ac{D}x -> {C}{b} sent10: \u00ac{G}{e} -> (\u00ac{I}{f} & \u00ac{G}{f}) sent11: (x): {D}x -> (\u00ac{F}x & {E}x)", "proofs": ["sent3 & sent1 -> int1: the samarium is syncategorematic.; int1 & sent5 -> int2: the palisade occupies ISKCON.; int2 & sent2 -> int3: the redberry bayonets stroke.; sent11 -> int4: the redberry does not exchange self-improvement but it is a syphilitic if it bayonets stroke.; int3 & int4 -> int5: the redberry does not exchange self-improvement but it is a kind of a syphilitic.; int5 & sent6 -> int6: the WAN does not occupy eared.; int6 & sent10 -> int7: the butterfish is not intracellular and it does not occupy eared.; int7 -> hypothesis;"], "proofs_formula": ["sent3 & sent1 -> int1: {B}{b}; int1 & sent5 -> int2: {C}{c}; int2 & sent2 -> int3: {D}{d}; sent11 -> int4: {D}{d} -> (\u00ac{F}{d} & {E}{d}); int3 & int4 -> int5: (\u00ac{F}{d} & {E}{d}); int5 & sent6 -> int6: \u00ac{G}{e}; int6 & sent10 -> int7: (\u00ac{I}{f} & \u00ac{G}{f}); int7 -> hypothesis;"], "negative_hypothesis": "the butterfish does occupy eared.", "negative_hypothesis_formula": "{G}{f}", "negative_proofs": ["sent7 -> int8: there is something such that it does not bayonet stroke.; int8 & sent9 -> int9: the samarium occupies ISKCON.; int9 -> int10: that something does occupy ISKCON is not wrong.;"], "negative_original_tree_depth": 7, "original_tree_depth": 7, "depth": 7, "num_formula_distractors": 4, "num_translation_distractors": 0, "num_all_distractors": 4, "proof_label": "PROVED", "negative_proof_label": "UNKNOWN", "world_assump_label": "PROVED", "negative_world_assump_label": "UNKNOWN"},
    {"version": "0.2", "hypothesis": "there is something such that if it does not exchange modesty and it does not bayonet demurrer it empties.", "hypothesis_formula": "(Ex): (\u00ac{AA}x & \u00ac{AB}x) -> {B}x", "context": "sent1: the dinoflagellate is a kind of an emptying if it does not exchange modesty and bayonets demurrer. sent2: there exists something such that if it exchanges modesty and it does not bayonet demurrer it is emptying. sent3: something is an emptying if it does exchange modesty and does not bayonet demurrer. sent4: if something that does not exchange modesty bayonets demurrer then the fact that it empties is not incorrect. sent5: something is an emptying if it does not exchange modesty and it does not bayonet demurrer.", "context_formula": "sent1: (\u00ac{AA}{aa} & {AB}{aa}) -> {B}{aa} sent2: (Ex): ({AA}x & \u00ac{AB}x) -> {B}x sent3: (x): ({AA}x & \u00ac{AB}x) -> {B}x sent4: (x): (\u00ac{AA}x & {AB}x) -> {B}x sent5: (x): (\u00ac{AA}x & \u00ac{AB}x) -> {B}x", "proofs": ["sent5 -> int1: if the dinoflagellate does not exchange modesty and it does not bayonet demurrer it is emptying.; int1 -> hypothesis;"], "proofs_formula": ["sent5 -> int1: (\u00ac{AA}{aa} & \u00ac{AB}{aa}) -> {B}{aa}; int1 -> hypothesis;"], "negative_hypothesis": null, "negative_hypothesis_formula": null, "negative_proofs": [], "negative_original_tree_depth": null, "original_tree_depth": 2, "depth": 2, "num_formula_distractors": 4, "num_translation_distractors": 0, "num_all_distractors": 4, "proof_label": "PROVED", "negative_proof_label": null, "world_assump_label": "PROVED", "negative_world_assump_label": null},
    {"version": "0.2", "hypothesis": "the fetus is a brace and it is a adrenosterone.", "hypothesis_formula": "({C}{b} & {B}{b})", "context": "sent1: there is something such that that it is not leptorrhine and it is atrioventricular is not correct. sent2: if the descent braces then the fetus does braces. sent3: the fact that the fetus is a kind of a brace that is a adrenosterone is not correct if that the descent is not busy hold. sent4: if there exists something such that that it is not leptorrhine and not non-atrioventricular is false then the fact that the descent does not busy is correct.", "context_formula": "sent1: (Ex): \u00ac(\u00ac{AA}x & {AB}x) sent2: {C}{a} -> {C}{b} sent3: \u00ac{A}{a} -> \u00ac({C}{b} & {B}{b}) sent4: (x): \u00ac(\u00ac{AA}x & {AB}x) -> \u00ac{A}{a}", "proofs": ["sent1 & sent4 -> int1: the descent does not busy.; sent3 & int1 -> hypothesis;"], "proofs_formula": ["sent1 & sent4 -> int1: \u00ac{A}{a}; sent3 & int1 -> hypothesis;"], "negative_hypothesis": "the fetus is both a brace and a adrenosterone.", "negative_hypothesis_formula": "({C}{b} & {B}{b})", "negative_proofs": [], "negative_original_tree_depth": 5, "original_tree_depth": 2, "depth": 2, "num_formula_distractors": 1, "num_translation_distractors": 0, "num_all_distractors": 1, "proof_label": "DISPROVED", "negative_proof_label": "UNKNOWN", "world_assump_label": "DISPROVED", "negative_world_assump_label": "UNKNOWN"}
]