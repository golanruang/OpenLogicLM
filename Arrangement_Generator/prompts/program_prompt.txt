Task description: Given the context for a problem, generate a complete logical reasoning problem by: 
1) Introducing a few more constraints, if possible and the problem is still valid. 
2) Creating a query (A,B,C,D,E) that only has one solution
3) Labeling the query as True or False. 

------
Context: 
The following paragraphs each describe a set of five objects arranged in a fixed order. The statements are logically consistent within each paragraph.\n\nOn a shelf, there are five books: a green book, a blue book, a white book, a purple book, and a yellow book. The blue book is to the right of the yellow book. The white book is to the left of the yellow book. The blue book is the second from the right. The purple book is the second from the left.
Output:
Domain:\n1: leftmost\n5: rightmost\nVariables:\ngreen_book [IN] [1, 2, 3, 4, 5]\nblue_book [IN] [1, 2, 3, 4, 5]\nwhite_book [IN] [1, 2, 3, 4, 5]\npurple_book [IN] [1, 2, 3, 4, 5]\nyellow_book [IN] [1, 2, 3, 4, 5]\nConstraints:\nblue_book > yellow_book ::: The blue book is to the right of the yellow book.\nwhite_book < yellow_book ::: The white book is to the left of the yellow book.\nblue_book == 4 ::: The blue book is the second from the right.\npurple_book == 2 ::: The purple book is the second from the left.\nAllDifferentConstraint([green_book, blue_book, white_book, purple_book, yellow_book]) ::: All books have different values.\nQuery:\nA) green_book == 2 ::: The green book is the second from the left.\nB) blue_book == 2 ::: The blue book is the second from the left.\nC) white_book == 2 ::: The white book is the second from the left.\nD) purple_book == 2 ::: The purple book is the second from the left.\nE) yellow_book == 2 ::: The yellow book is the second from the left.\n\nLabel: B

Context: 
The following paragraphs each describe a set of five objects arranged in a fixed order. The statements are logically consistent within each paragraph.\n\nIn an antique car show, there are five vehicles: a convertible, a sedan, a tractor, a minivan, and a limousine. The tractor is newer than the minivan. The tractor is older than the limousine. The convertible is older than the sedan. The convertible is the second-newest.
Output:
Domain:\n1: oldest\n5: newest\nVariables:\nconvertible [IN] [1, 2, 3, 4, 5]\nsedan [IN] [1, 2, 3, 4, 5]\ntractor [IN] [1, 2, 3, 4, 5]\nminivan [IN] [1, 2, 3, 4, 5]\nlimousine [IN] [1, 2, 3, 4, 5]\nConstraints:\ntractor > minivan ::: The tractor is newer than the minivan.\ntractor < limousine ::: The tractor is older than the limousine.\nconvertible < sedan ::: The convertible is older than the sedan.\nconvertible == 2 ::: The convertible is the second-newest.\nAllDifferentConstraint([convertible, sedan, tractor, minivan, limousine]) ::: All vehicles have different values.\nQuery:\nA) convertible == 2 ::: The convertible is the second-newest.\nB) sedan == 2 ::: The sedan is the second-newest.\nC) tractor == 2 ::: The tractor is the second-newest.\nD) minivan == 2 ::: The minivan is the second-newest.\nE) limousine == 2 ::: The limousine is the second-newest.\n\nLabel: B
------

Context: 
[[CONTEXT]]